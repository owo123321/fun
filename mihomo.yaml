port: 7890
socks-port: 7891
mixed-port: 7892
redir-port: 7893
tproxy-port: 7894

unified-delay: true
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: chrome

allow-lan: true
mode: rule
log-level: info
ipv6: true
udp: true
keep-alive-interval: 1800

external-controller: 0.0.0.0:9090
# external-ui: ui
# external-ui-url: 'https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip'

geox-url:
  # geoip: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geoip.dat'
  # geosite: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geosite.dat'
  mmdb: 'https://gitlab.com/Masaiki/GeoIP2-CN/-/raw/release/Country.mmdb'
  asn: 'https://gitlab.com/Loon0x00/loon_data/-/raw/main/geo/GeoLite2-ASN.mmdb'

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com

  skip-domain:
    - Mijia Cloud

tun:
  enable: true
  stack: system
  dns-hijack:
    - any:53
  auto-route: true
  auto-detect-interface: true

dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - "*"
    - +.lan
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  nameserver:
    - https://doh.pub/dns-query
    - https://223.5.5.5/dns-query#h3=true

# 锚点 - 节点订阅的参数 [每小时更新一次订阅节点，每 60 秒一次健康检查]
NodeParam: &NodeParam {type: http, interval: 3600, health-check: {enable: true, url: 'http://cp.cloudflare.com', interval: 60}}

# 锚点 - 节点订阅
proxy-providers: 
  机场名称1:
    url: '机场1的订阅URL'
    <<: *NodeParam
    path: './proxy_providers/机场名称1.yaml'
    override:
      additional-prefix: "[机场名称1] " # 为订阅节点添加机场名称前缀

# 锚点 - 节点筛选组
FilterCL: &FilterCL '(HK|JP).*(?i)1X|(HK|TW).*0\.2'
FilterMT: &FilterMT '(US|EU).*0\.1|US.*0\.5'
FilterGame: &FilterGame '(?i)-1X|-3X|-5X|20X'
FilterAll: &FilterAll '.*(.)'

# 策略组参数锚点
# 锚点 - 时延优选参数 [每 60 秒一次惰性健康检查，容差 20ms，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
UrlTest: &UrlTest {type: url-test, interval: 60, tolerance: 20, lazy: true, url: 'http://cp.cloudflare.com', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 故障转移参数 [每 60 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
FallBack: &FallBack {type: fallback, interval: 60, lazy: true, url: 'http://cp.cloudflare.com', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 负载均衡参数 [每 60 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
LoadBalance: &LoadBalance {type: load-balance, interval: 60, lazy: true, url: 'http://cp.cloudflare.com', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 规则参数 [每小时更新一次订阅规则，更新规则时使用直连策略]
RuleProviders: &RuleProviders {type: http, behavior: classical, interval: 3600, format: yaml, proxy: DIRECT}

# 策略组
proxy-groups: 
  - {name: 💫 溜溜球, type: select, proxies: [冲浪, 媒体, 自选], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/Badoo.png}
  - {name: 🍿 流媒体, type: select, proxies: [媒体, 冲浪, 自选], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Social_Media/YouTube.png}
  - {name: 📺 公益服, type: select, proxies: [媒体, 冲浪, 自选, DIRECT], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/BiliBili.png}
  - {name: 🎮 打电动, type: select, include-all-providers: true, filter: *FilterGame, proxies: [DIRECT, 自选], icon: https://raw.githubusercontent.com/Semporia/Hand-Painted-icon/master/Universal/Steam.png}
  
# 节点策略组
  - {name: 冲浪, <<: *FallBack, filter: *FilterCL, hidden: false, icon: https://raw.githubusercontent.com/tugepaopao/Image-Storage/master/cartoon/Cute/pikachu.png}
  - {name: 媒体, <<: *FallBack, filter: *FilterMT, hidden: false, icon: https://raw.githubusercontent.com/tugepaopao/Image-Storage/master/cartoon/Cute/5icon.png}
  - {name: 自选, type: select, include-all-providers: true, filter: *FilterAll,  icon: https://raw.githubusercontent.com/tugepaopao/Image-Storage/master/cartoon/Cute/snorlax.png}

# 订阅规则
rule-providers:
  UnBan:
    <<: *RuleProviders
    path: './rules/UnBan.yaml'
    url: 'https://raw.githubusercontent.com/owo123321/fun/main/Providers/UnBan.yaml'

  Proxy:
    <<: *RuleProviders
    path: './rules/Proxy.yaml'
    url: 'https://raw.githubusercontent.com/owo123321/fun/main/Providers/Proxy.yaml'

  BanProgramAD:
    <<: *RuleProviders
    path: './rules/BanProgramAD.yaml'
    url: 'https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanProgramAD.yaml'

  BanAD:
    <<: *RuleProviders
    path: './rules/BanAD.yaml'
    url: 'https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanAD.yaml'

  WeChat:
    <<: *RuleProviders
    path: './rules/WeChat'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/WeChat/WeChat.yaml'

  Game:
    <<: *RuleProviders
    path: './rules/Game.yaml'
    url: 'https://raw.githubusercontent.com/owo123321/fun/main/Providers/Game.yaml'
  
  ProxyMedia:
    <<: *RuleProviders
    path: './rules/ProxyMedia.yaml'
    url: 'https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/ProxyMedia.yaml'
  
  Emby:
    <<: *RuleProviders
    path: './rules/Emby.yaml'
    url: 'https://raw.githubusercontent.com/owo123321/fun/main/Providers/Emby.yaml'

  Bing:
    <<: *RuleProviders
    path: './rules/Bing.yaml'
    url: 'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Bing/Bing.yaml'

# 规则指向
rules:
  - RULE-SET, UnBan, DIRECT
  - RULE-SET, Proxy, 💫 溜溜球
  - RULE-SET, BanProgramAD, REJECT
  - RULE-SET, BanAD, REJECT
  - RULE-SET, Game, 🎮 打电动
  - RULE-SET, ProxyMedia, 🍿 流媒体
  - RULE-SET, Emby, 📺 公益服
  - RULE-SET, Bing, 💫 溜溜球
  - RULE-SET, WeChat, DIRECT
  - GEOIP, CN, DIRECT
  - MATCH, 💫 溜溜球
